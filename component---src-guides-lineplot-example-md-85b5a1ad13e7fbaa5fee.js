"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[983],{329:function(n,e,t){t.r(e),t.d(e,{_frontmatter:function(){return i},default:function(){return m}});var a=t(3366),l=(t(7294),t(4983)),r=t(3076),o=["components"],i={},s={_frontmatter:i},p=r.Z;function m(n){var e=n.components,t=(0,a.Z)(n,o);return(0,l.kt)(p,Object.assign({},s,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This tutorial will be following on after the Bar Chart Example. "),(0,l.kt)("p",null,"Create a new file in the plots directory called 'linePlot.js'. Inside of the index.js file, import this file,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// import at the top of index.js after the bar chart import\nimport makeLinePlot from '../plots/linePlot';\n")),(0,l.kt)("p",null,"And call the function passing in the same data inside of  the ",(0,l.kt)("inlineCode",{parentName:"p"},"resize")," function."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"makeLinePlot(data);\n")),(0,l.kt)("p",null,"Setup 'linePlot.js' by using the 'start' short code as done before. Make the id for this plot be: '#nexus-example-line-plot'. Then add another div to 'index.ejs' with this id."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const lineData = data.map((d) => [\n    {\n        year: 2019,\n        val: d[2019],\n    },\n    {\n        year: 2020,\n        val: d[2020],\n    },\n    {\n        year: 2021,\n        val: d[2021],\n    },\n]);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'import { scalePoint } from "d3-scale";\nimport { max } from "d3-array";\n\nconst x = scalePoint()\n    .domain([2019, 2020, 2021])\n    .range([margin.left, size.width - margin.right]);\n\nconst y = scaleLinear()\n    .domain([0, max(lineData, (d) => max(d, (v) => v.val))])\n    .range([size.height - margin.bottom, margin.top]);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { line } from 'd3-shape';\n\nconst myLine = line()\n.x((d) => x(d.year))\n.y((d) => y(d.val));\n\nsvg\n    .selectAll('lines')\n    .data(lineData)\n    .enter()\n    .append('path')\n    .attr('d', myLine)\n    .attr('stroke', 'black')\n    .attr('fill', 'none');\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { axisBottom } from 'd3-axis';\n\nsvg\n    .append('g')\n    .style('color', '#adadad')\n    .style('font-size', '12pt')\n    .attr('transform', `translate(0, ${size.height - margin.bottom})`)\n    .call(axisBottom().scale(x));\n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-guides-lineplot-example-md-85b5a1ad13e7fbaa5fee.js.map