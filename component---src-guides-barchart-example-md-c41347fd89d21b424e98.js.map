{"version":3,"file":"component---src-guides-barchart-example-md-c41347fd89d21b424e98.js","mappings":"+OAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,oBAAK,gBAAMC,WAAW,MAClB,UAAa,eADZ,yQAgBL,2HACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,+FAOL,+HACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,4FASL,0HACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,oHAOL,+CACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,2EAML,yHACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,wRAgBTJ,EAAWK,gBAAiB","sources":["webpack://guide/./src/guides/barchartExample.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/nexus/data-gh/guide/src/components/layout/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { select } from \"d3-selection\";\n\nconst makePlot = (data) => {\n    const container = select(\"#div-id\")\n\n    container.selectAll(\"*\").remove();\n\n    container.append(\"h1\").text(\"My title\");\n\n    console.log(data)\n}\n\nexport default makePlot;\n`}</code></pre>\n    <p>{`Start typing in 'const size =' and select the 'D3 Size Object' which will insert the following code. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const size = {\n    height: 400,\n    width: Math.min(600, window.innerWidth - 40),\n};\n`}</code></pre>\n    <p>{`Start typing in 'const margin =' and select the 'D3 Margin Object' which will insert the following code. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n`}</code></pre>\n    <p>{`We can then type 'const svg =' and select the option to setup out svg with the specified size above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const svg = container\n    .append('svg')\n    .attr('height', size.height)\n    .attr('width', size.width);\n`}</code></pre>\n    <p>{`Now, our HTML looks like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div id=\"div-id\">\n    <svg height=\"400\" width=\"600\"></svg>\n</div>\n`}</code></pre>\n    <p>{`and we can see that inside of our div is our appended svg with the height and width attributes set.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { scaleLinear, scaleBand } from \"d3-scale\";\n\nconst x = scaleLinear()\n    .domain([0, 1])\n    .range([margin.left, size.width - margin.right]);\n\nconst y = scaleBand()\n    .domain(data.map((d) => d.race))\n    .range([size.height - margin.bottom, margin.top]);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}